{
	"info": {
		"_postman_id": "375b561e-7747-4928-804d-d27910c4a610",
		"name": "3. API METHODS SCRIPTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET ALL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status test\", function () {",
							"    pm.expect(pm.response.code).to.equal(200)",
							"});",
							"",
							"",
							"pm.test(\"Response Time test\", function () {",
							"    pm.expect(pm.response.responseTime).to.lessThan(300)",
							"});",
							"",
							"var responseJson = pm.response.json();",
							"",
							"pm.test(\"Response should include all keys\", function () {",
							"    var expectedKeys = [\"userId\", \"id\", \"title\",\"body\"];",
							"    pm.expect(responseJson[0]).to.have.keys(expectedKeys)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET ONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var responseJson = pm.response.json();",
							"pm.globals.set(\"userID\",responseJson.userID)",
							"pm.globals.set(\"id\",responseJson.id)",
							"pm.globals.set(\"title\",responseJson.title)",
							"pm.globals.set(\"body\",responseJson.body)",
							"",
							"",
							"pm.test(\"Response should include all keys\", function () {",
							"    var expectedKeys = [\"userId\", \"id\", \"title\", \"body\"];",
							"    pm.expect(responseJson).to.have.keys(expectedKeys)",
							"});",
							"pm.test(\"User ID should be not null\", function () {",
							"    pm.expect(responseJson.userId).not.equal(null)",
							"    pm.expect(responseJson.userId).to.equals(1);",
							"});",
							"",
							"pm.test(\"Title length should be more than 16\", function () {",
							"    pm.expect(responseJson.title).length.greaterThan(10)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE ONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var responseJson = pm.response.json();",
							"pm.test(\"Should return a not null id\", function () {",
							"    pm.expect(responseJson.id).not.equal(null)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts?title=foo&body=bar&userId=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "title",
							"value": "foo"
						},
						{
							"key": "body",
							"value": "bar"
						},
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE ONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var responseJson = pm.response.json();",
							"pm.test(\"Should return a not null id\", function () {",
							"    pm.expect(responseJson.id).not.equal(null)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1?id=1&title=foo&body=bar&userId=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						},
						{
							"key": "title",
							"value": "foo"
						},
						{
							"key": "body",
							"value": "bar"
						},
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE ONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}